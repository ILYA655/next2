'use client'
import React, {useEffect} from 'react'
import Head from 'next/head'
import "react-awesome-slider/dist/styles.css";
import "react-awesome-slider/dist/captioned.css";
import styles from '../styles/Home.module.css'
import {Button, Form, Input} from 'antd';
import Link from "next/link";
// import {openDb} from "./api/db";

export async function getServerSideProps() {

    // Open database
    const db = await openDb()

    // Get posts from database
    const data = await db.all('SELECT * FROM data')
    // Pass posts as prop to component
    return {
        props: {
            data
        }
    }
}

export default function Home() {

    useEffect(() => {
        async function createFile() {
            const response = await fetch('/api/createFile', { method: 'POST' });
            if (response.ok) {
                const data = await response.json();
                console.log(data.message);
            } else {
                console.error('Failed to create file');
            }
        }

        createFile();
    }, []);

    const [form] = Form.useForm();



    const onFinish = async () => {

        let values = form.getFieldsValue();
        console.log(values);

        // Для записи в бд раскомментить 9, 53-59, но при запуске будет "Application error: a client-side exception has occurred (see the browser console for more information)."

        // const db = await openDb()
        // await db.run(
        //     'INSERT INTO data (Email, Password) VALUES (?, ?)',
        //     values.email,
        //     values.pass
        // )
        // await db.close()

        await fetch('/api/createFile', { method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, body: JSON.stringify(values)});

        window.location.href = "./auth"
    };

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                <div>
                    <>
                        {/*<Modal title="Who are YOU?" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>*/}
                        <Form form={form} action="./auth" method="dialog" onFinish={onFinish}>
                            <Form.Item name="email" label="Email: ">
                                <Input placeholder="enter email" required type="text" id="email" name="email"/>
                            </Form.Item>

                            <Form.Item name="pass" label="Password: ">
                                <Input placeholder="enter password" required type="password" id="pass"
                                       name="pass"/>
                            </Form.Item>
                            <Form.Item>
                                <Button type="primary" htmlType="submit">
                                    Log in
                                </Button>
                            </Form.Item>
                            <Form.Item>
                                <Link href="./api/seed">
                                    <Button>Тестовая кнопка для записи чего-то в БД</Button>
                                </Link>
                            </Form.Item>

                        </Form>
                        {/*</Modal>*/}
                    </>
                </div>
            </main>
        </div>
    )
}
